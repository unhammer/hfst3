std::map<std::string, XfstCommand> name2cmd;

name2cmd["add properties"] = ADD_PROPS;
name2cmd["add"] = ADD_PROPS;
name2cmd["apply up"] = APPLY_UP;
name2cmd["up"] = APPLY_UP;
name2cmd["apply down"] = APPLY_DOWN;
name2cmd["down"] = APPLY_DOWN;
name2cmd["apply med"] = APPLY_MED;
name2cmd["med"] = APPLY_MED;
name2cmd["ambiguous upper"] = AMBIGUOUS;
name2cmd["ambiguous"] = AMBIGUOUS;
name2cmd["alias"] = DEFINE_ALIAS;
name2cmd["apropos"] = APROPOS;
name2cmd["cleanup net"] = CLEANUP;
name2cmd["cleanup"] = CLEANUP;
name2cmd["clear"] = CLEAR;
name2cmd["clear stack"] = CLEAR;
name2cmd["collect epsilon-loops"] = COLLECT_EPSILON_LOOPS;
name2cmd["epsilon-loops"] = COLLECT_EPSILON_LOOPS;
name2cmd["compact sigma"] = COMPACT_SIGMA;
name2cmd["compile-replace lower"] = COMPILE_REPLACE_LOWER;
name2cmd["com-rep lower"] = COMPILE_REPLACE_LOWER;
name2cmd["compile-replace upper"] =  COMPILE_REPLACE_UPPER;
name2cmd["com-rep upper"] = COMPILE_REPLACE_UPPER;
name2cmd["complete net"] = COMPLETE;
name2cmd["complete"] = COMPLETE;
name2cmd["compose net"] = COMPLETE;
name2cmd["compose"] = COMPOSE;
name2cmd["concatenate net"] = COMPOSE;
name2cmd["concatenate"] = CONCATENATE;
name2cmd["crossproduct net"] = CONCATENATE;
name2cmd["crossproduct"] = CROSSPRODUCT;
name2cmd["define"] = DEFINE_FUNCTION;
name2cmd["define"] = DEFINE_NAME;
name2cmd["determinize net"] = DETERMINIZE;
name2cmd["determinize"] = DETERMINIZE;
name2cmd["determinise net"] = DETERMINIZE;
name2cmd["determinise"] = DETERMINIZE;
name2cmd["echo"] = ECHO;
name2cmd["edit properties"] = EDIT_PROPS;
name2cmd["edit"] = EDIT_PROPS;
name2cmd["eliminate flag"] = ELIMINATE_FLAG;
name2cmd["eliminate flags"] = ELIMINATE_ALL;
name2cmd["epsilon-remove net"] = EPSILON_REMOVE;
name2cmd["epsilon-remove"] = EPSILON_REMOVE;
name2cmd["extract ambiguous"] = EXTRACT_AMBIGUOUS;
name2cmd["extract unambiguous"] = EXTRACT_UNAMBIGUOUS;
name2cmd["apropos"] = DESCRIBE;
name2cmd["help"] = DESCRIBE;
name2cmd["hfst"] = HFST;
name2cmd["ignore net"] = IGNORE;
name2cmd["ignore"] = IGNORE;
name2cmd["intersect net"] = INTERSECT;
name2cmd["intersect"] = INTERSECT;
name2cmd["conjunct"] = INTERSECT;
name2cmd["inspect"] = INSPECT;
name2cmd["inspect net"] = INSPECT;
name2cmd["invert net"] = INVERT;
name2cmd["invert"] = INVERT;
name2cmd["label net"] = LABEL;
name2cmd["list"] = LIST;
name2cmd["load defined"] = LOADD;
name2cmd["loadd"] = LOADD;
name2cmd["load"] = LOADS;
name2cmd["load stack"] = LOADS;
name2cmd["lower-side net"] = LOWER_SIDE;
name2cmd["lower-side"] = LOWER_SIDE;
name2cmd["minimize net"] = MINIMIZE;
name2cmd["minimize"] = MINIMIZE;
name2cmd["minimise"] = MINIMIZE;
name2cmd["minus net"] = MINUS;
name2cmd["minus"] = MINUS;
name2cmd["subtract"] = MINUS;
name2cmd["name net"] = NAME;
name2cmd["name"] = NAME;
name2cmd["negate net"] = NEGATE;
name2cmd["negate"] = NEGATE;
name2cmd["one-plus net"] = ONE_PLUS;
name2cmd["one-plus"] = ONE_PLUS;
name2cmd["pop"] = POP;
name2cmd["pop stack"] = POP;
name2cmd["print aliases"] = PRINT_ALIASES;
name2cmd["aliases"] = PRINT_ALIASES;
name2cmd["print arc-tally"] = PRINT_ARCCOUNT;
name2cmd["arc-tally"] = PRINT_ARCCOUNT;
name2cmd["print defined"] = PRINT_DEFINED;
name2cmd["pdefined"] = PRINT_DEFINED;
name2cmd["write definition"] = SAVE_DEFINITION;
name2cmd["wdef"] = SAVE_DEFINITION;
name2cmd["write definitions"] = SAVE_DEFINITIONS;
name2cmd["wdefs"] = SAVE_DEFINITIONS;
name2cmd["print directory"] = PRINT_DIR;
name2cmd["directory"] = PRINT_DIR;
name2cmd["write dot"] = SAVE_DOT;
name2cmd["wdot"] = SAVE_DOT;
name2cmd["dot"] = SAVE_DOT;
name2cmd["write att"] = WRITE_ATT;
name2cmd["att"] = WRITE_ATT;
name2cmd["print file-info"] = PRINT_FILE_INFO;
name2cmd["file-info"] = PRINT_FILE_INFO;
name2cmd["print flags"] = PRINT_FLAGS;
name2cmd["flags"] = PRINT_FLAGS;
name2cmd["print labels"] = PRINT_LABELS;
name2cmd["labels"] = PRINT_LABELS;
name2cmd["print label-maps"] = PRINT_LABELMAPS;
name2cmd["label-maps"] = PRINT_LABELMAPS;
name2cmd["print label-tally"] = PRINT_LABEL_COUNT;
name2cmd["label-tally"] = PRINT_LABEL_COUNT;
name2cmd["print list"] = PRINT_LIST;
name2cmd["print lists"] = PRINT_LISTS;
name2cmd["print longest-string"] = PRINT_LONGEST_STRING;
name2cmd["longest-string"] = PRINT_LONGEST_STRING;
name2cmd["pls"] = PRINT_LONGEST_STRING;
name2cmd["print longest-string-size"] = PRINT_LONGEST_STRING_SIZE;
name2cmd["longest-string-size"] = PRINT_LONGEST_STRING_SIZE;
name2cmd["plz"] = PRINT_LONGEST_STRING_SIZE;
name2cmd["print lower-words"] = PRINT_LOWER_WORDS;
name2cmd["lower-words"] = PRINT_LOWER_WORDS;
name2cmd["print name"] = PRINT_NAME;
name2cmd["pname"] = PRINT_NAME;
name2cmd["print net"] = PRINT;
name2cmd["print properties"] = PRINT_PROPS;
name2cmd["print props"] = PRINT_PROPS;
name2cmd["write properties"] = PRINT_PROPS;
name2cmd["write props"] = PRINT_PROPS;
name2cmd["print random-lower"] = PRINT_RANDOM_LOWER;
name2cmd["random-lower"] = PRINT_RANDOM_LOWER;
name2cmd["print random-upper"] = PRINT_RANDOM_UPPER;
name2cmd["random-upper"] = PRINT_RANDOM_UPPER;
name2cmd["print random-words"] = PRINT_RANDOM_WORDS;
name2cmd["random-words"] = PRINT_RANDOM_WORDS;
name2cmd["print shortest-string-size"] = PRINT_SHORTEST_STRING_SIZE;
name2cmd["print shortest-string-length"] = PRINT_SHORTEST_STRING_SIZE;
name2cmd["shortest-string-size"] = PRINT_SHORTEST_STRING_SIZE;
name2cmd["shortest-string-length"] = PRINT_SHORTEST_STRING_SIZE;
name2cmd["psz"] = PRINT_SHORTEST_STRING_SIZE;
name2cmd["print shortest-string"] = PRINT_SHORTEST_STRING;
name2cmd["shortest-string"] = PRINT_SHORTEST_STRING;
name2cmd["pss"] = PRINT_SHORTEST_STRING;
name2cmd["print sigma"] = PRINT_SIGMA;
name2cmd["sigma"] = PRINT_SIGMA;
name2cmd["print sigma-tally"] = PRINT_SIGMA_COUNT;
name2cmd["sigma-tally"] = PRINT_SIGMA_COUNT;
name2cmd["sitally"] = PRINT_SIGMA_COUNT;
name2cmd["print sigma-word-tally"] = PRINT_SIGMA_WORD_COUNT;
name2cmd["print size"] = PRINT_SIZE;
name2cmd["size"] = PRINT_SIZE;
name2cmd["print stack"] = PRINT_STACK;
name2cmd["stack"] = PRINT_STACK;
name2cmd["print upper-words"] = PRINT_UPPER_WORDS;
name2cmd["upper-words"] = PRINT_UPPER_WORDS;
name2cmd["print words"] = PRINT_WORDS;
name2cmd["words"] = PRINT_WORDS;
name2cmd["prune net"] = PRUNE_NET;
name2cmd["prune"] = PRUNE_NET;
name2cmd["push"] = PUSH_DEFINED;
name2cmd["push defined"] = PUSH_DEFINED;
name2cmd["quit"] = QUIT;
name2cmd["exit"] = QUIT;
name2cmd["bye"] = QUIT;
name2cmd["stop"] = QUIT;
name2cmd["hyvästi"] = QUIT;
name2cmd["au revoir"] = QUIT;
name2cmd["näkemiin"] = QUIT;
name2cmd["viszlát"] = QUIT;
name2cmd["auf wiedersehen"] = QUIT;
name2cmd["hasta la vista"] = QUIT;
name2cmd["arrivederci"] = QUIT;
name2cmd["dodongo"] = QUIT;
name2cmd["lexc"] = READ_LEXC;
name2cmd["read lexc"] = READ_LEXC;
name2cmd["att"] = READ_ATT;
name2cmd["read att"] = READ_ATT;
name2cmd["read properties"] = READ_PROPS;
name2cmd["rprops"] = READ_PROPS;
name2cmd["read prolog"] = READ_PROLOG;
name2cmd["rpl"] = READ_PROLOG;
name2cmd["regex"] = READ_REGEX;
name2cmd["read regex"] = READ_REGEX;
name2cmd["rs"] = READ_SPACED;
name2cmd["read spaced-text"] = READ_SPACED;
name2cmd["rt"] = READ_TEXT;
name2cmd["read text"] = READ_TEXT;
name2cmd["reverse net"] = REVERSE;
name2cmd["reverse"] = REVERSE;
name2cmd["rotate"] = ROTATE;
name2cmd["rotate stack"] = ROTATE;
name2cmd["save defined"] = SAVE_DEFINITIONS;
name2cmd["saved"] = SAVE_DEFINITIONS;
name2cmd["save stack"] = SAVE_STACK;
name2cmd["save"] = SAVE_STACK;
name2cmd["ss"] = SAVE_STACK;
name2cmd["set"] = SET;
name2cmd["show variables"] = SHOW_ALL;
name2cmd["show variable"] = SHOW;
name2cmd["show"] = SHOW;
name2cmd["shuffle net"] = SHUFFLE;
name2cmd["shuffle"] = SHUFFLE;
name2cmd["sigma net"] = SIGMA;
name2cmd["sort net"] = SORT;
name2cmd["sort"] = SORT;
name2cmd["source"] = SOURCE;
name2cmd["substitute defined"] = SUBSTITUTE_NAMED;
name2cmd["for"] = FOR;
name2cmd["substitute label"] = SUBSTITUTE_LABEL;
name2cmd["substitute symbol"] = SUBSTITUTE_SYMBOL;
name2cmd["substring net"] = SUBSTRING;
name2cmd["substring"] = SUBSTRING;
name2cmd["system"] = SYSTEM;
name2cmd["test equivalent"] = TEST_EQ;
name2cmd["equivalent"] = TEST_EQ;
name2cmd["te"] = TEST_EQ;
name2cmd["test functional"] = TEST_FUNCT;
name2cmd["functional"] = TEST_FUNCT;
name2cmd["tf"] = TEST_FUNCT;
name2cmd["test identity"] = TEST_ID;
name2cmd["identity"] = TEST_ID;
name2cmd["ti"] = TEST_ID;
name2cmd["test lower-bounded"] = TEST_LOWER_BOUNDED;
name2cmd["lower-bounded"] = TEST_LOWER_BOUNDED;
name2cmd["tlb"] = TEST_LOWER_BOUNDED;
name2cmd["test lower-universal"] = TEST_LOWER_UNI;
name2cmd["lower-universal"] = TEST_LOWER_UNI;
name2cmd["tlu"] = TEST_LOWER_UNI;
name2cmd["test non-null"] = TEST_NONNULL;
name2cmd["tnn"] = TEST_NONNULL;
name2cmd["test null"] = TEST_NULL;
name2cmd["tnu"] = TEST_NULL;
name2cmd["test overlap"] = TEST_OVERLAP;
name2cmd["overlap"] = TEST_OVERLAP;
name2cmd["to"] = TEST_OVERLAP;
name2cmd["test sublanguage"] = TEST_SUBLANGUAGE;
name2cmd["sublanguage"] = TEST_SUBLANGUAGE;
name2cmd["ts"] = TEST_SUBLANGUAGE;
name2cmd["test upper-bounded"] = TEST_UPPER_BOUNDED;
name2cmd["upper-bounded"] = TEST_UPPER_BOUNDED;
name2cmd["tub"] = TEST_UPPER_BOUNDED;
name2cmd["test upper-universal"] = TEST_UPPER_UNI;
name2cmd["upper-universal"] = TEST_UPPER_UNI;
name2cmd["tuu"] = TEST_UPPER_UNI;
name2cmd["test unambiguous"] = TEST_UNAMBIGUOUS;
name2cmd["turn"] = TURN;
name2cmd["turn stack"] = TURN;
name2cmd["twosided flag-diacritics"] = TWOSIDED_FLAGS;
name2cmd["tfd"] = TWOSIDED_FLAGS;
name2cmd["undefine"] = UNDEFINE;
name2cmd["unlist"] = UNLIST;
name2cmd["union net"] = UNION;
name2cmd["union"] = UNION;
name2cmd["disjunct"] = UNION;
name2cmd["upper-side net"] = UPPER_SIDE;
name2cmd["upper-side"] = UPPER_SIDE;
name2cmd["view net"] = VIEW;
name2cmd["wpl"] = SAVE_PROLOG;
name2cmd["write prolog"] = SAVE_PROLOG;
name2cmd["wspaced-text"] = SAVE_SPACED;
name2cmd["write spaced-text"] = SAVE_SPACED;
name2cmd["wt"] = SAVE_TEXT;
name2cmd["write text"] = SAVE_TEXT;
name2cmd["zero-plus net"] = ZERO_PLUS;
name2cmd["zero-plus"] = ZERO_PLUS;
