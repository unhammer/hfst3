char * cmd [] =
{
"add properties",
"alias",
"ambiguous upper",
"apply down",
"apply med",
"apply up",
"apropos",
"assert",
"cleanup net",
"clear stack",
"collect epsilon-loops",
"compact sigma",
"compile-replace lower",
"compile-replace upper",
"complete net",
"compose net",
"concatenate net",
"crossproduct net",
"define",
"determinize net",
"echo",
"edit properties",
"eliminate flag",
"eliminate flags",
"epsilon-remove net",
"exit",
"extract ambiguous",
"extract unambiguous",
"help",
"hfst",
"ignore net",
"inspect",
"intersect net",
"invert net",
"label net",
"list",
"load defined",
"load stack",
"lower-side net",
"minimize net",
"minus net",
"name net",
"negate net",
"one-plus net",
"pop stack",
"print aliases",
"print arc-tally",
"print defined",
"print directory",
"print file-info",
"print flags",
"print label-maps",
"print labels",
"print label-tally",
"print list",
"print lists",
"print longest-string",
"print longest-string-size",
"print lower-words",
"print name",
"print net",
"print properties",
"print random-lower",
"print random-upper",
"print random-words",
"print shortest-string",
"print shortest-string-size",
"print sigma",
"print sigma-tally",
"print sigma-word-tally",
"print size",
"print stack",
"print upper-words",
"print words",
"prune net",
"push defined",
"quit",
"read att",
"read lexc",
"read prolog",
"read properties",
"read regex",
"read spaced-text",
"read text",
"reverse net",
"rotate stack",
"save defined",
"save stack",
"set",
"show variable",
"show variables",
"shuffle net",
"sigma net",
"sort net",
"source",
"substitute defined",
"substitute label",
"substitute symbol",
"substring net",
"system",
"test equivalent",
"test functional",
"test identity",
"test lower-bounded",
"test lower-universal",
"test non-null",
"test null",
"test overlap",
"test sublanguage",
"test unambiguous",
"test upper-bounded",
"test upper-universal",
"turn stack",
"twosided flag-diacritics",
"undefine",
"union net",
"unlist",
"upper-side net",
"view net",
"write att",
"write definition",
"write definitions",
"write dot",
"write prolog",
"write spaced-text",
"write text",
"zero-plus net",
NULL,
};
