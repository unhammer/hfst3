.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.4.
.TH HFST-REGEXP2FST "1" "October 2014" "HFST" "User Commands"
.SH NAME
hfst-regexp2fst \- =Compile (weighted) regular expressions into transducer(s)
.SH SYNOPSIS
.B hfst-regexp2fst
[\fIOPTIONS\fR...] [\fIINFILE\fR]
.SH DESCRIPTION
Compile (weighted) regular expressions into transducer(s)
Common options:
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help message
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version info
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Print verbosely while processing
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Only print fatal erros and requested output
.TP
\fB\-s\fR, \fB\-\-silent\fR
Alias of \fB\-\-quiet\fR
.SS "Input/Output options:"
.TP
\fB\-i\fR, \fB\-\-input\fR=\fIINFILE\fR
Read input transducer from INFILE
.TP
\fB\-o\fR, \fB\-\-output\fR=\fIOUTFILE\fR
Write output transducer to OUTFILE
.SS "String and format options:"
.TP
\fB\-f\fR, \fB\-\-format\fR=\fIFMT\fR
Write result in FMT format
.TP
\fB\-j\fR, \fB\-\-disjunct\fR
Disjunct all regexps instead of transforming
each regexp into a separate transducer
.TP
\fB\-l\fR, \fB\-\-line\fR
Input is line separated (default)
.TP
\fB\-S\fR, \fB\-\-semicolon\fR
Input is semicolon separated
.TP
\fB\-e\fR, \fB\-\-epsilon\fR=\fIEPS\fR
Map EPS as zero, i.e. epsilon.
.TP
\fB\-x\fR, \fB\-\-xerox\-composition\fR=\fIVALUE\fR Whether flag diacritics are treated as ordinary
symbols in composition (default is false).
.TP
\fB\-X\fR, \fB\-\-xfst\fR=\fIVARIABLE\fR
Toggle xfst compatibility option VARIABLE.
.SS "Harmonization:"
.TP
\fB\-H\fR, \fB\-\-do\-not\-harmonize\fR
Do not expand '?' symbols.
.TP
\fB\-F\fR, \fB\-\-harmonize\-flags\fR
Harmonize flag diacritics.
.TP
\fB\-E\fR, \fB\-\-encode\-weights\fR
Encode weights when minimizing (default is false).
.PP
If OUTFILE or INFILE is missing or \-, standard streams will be used.
FMT must be one of the following: {foma, sfst, openfst\-tropical, openfst\-log}.
If EPS is not defined, the default representation of 0 is used
VALUEs recognized are {true,ON,yes} and {false,OFF,no}.
Xfst variables are {flag\-is\-epsilon (default OFF)}.
.SH EXAMPLES
.TP
echo " {cat}:{dog} " | hfst\-regexp2fst
create transducer {cat}:{dog}
.TP
echo " {cat}:{dog}::3 " | hfst\-regexp2fst
same but with weight 3
.TP
echo " c:d a:o::3 t:g " | hfst\-regexp2fst
same but with weight 3
in the middle
.TP
echo " {cat}:{dog} ; 3 " | hfst\-regexp2fst
legacy way of defining weights
.TP
echo " cat ; dog ; 3 " | hfst\-regexp2fst \fB\-S\fR
create transducers
"cat" and "dog" and "3"
.SH "REPORTING BUGS"
Report bugs to <hfst\-bugs@helsinki.fi> or directly to our bug tracker at:
<https://sourceforge.net/tracker/?atid=1061990&group_id=224521&func=browse>
.PP
hfst\-regexp2fst home page:
<https://kitwiki.csc.fi/twiki/bin/view/KitWiki//Regexp2Fst>
.br
General help using HFST software:
<https://kitwiki.csc.fi/twiki/bin/view/KitWiki//HfstHome>
.SH COPYRIGHT
Copyright \(co 2010 University of Helsinki,
License GPLv3: GNU GPL version 3 <http://gnu.org/licenses/gpl.html>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
