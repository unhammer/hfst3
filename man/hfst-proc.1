.TH HFST-PROC "1" "June 2010" "HFST" "User Commands"
.SH NAME
hfst-proc \- A tool for performing morphological analysis and generation with
finite state transducers
.SH SYNOPSIS
.B hfst-proc
[
.B \-a
[
.B \-p \fR|
.B \-C \fR|
.B \-x
] [
.B \-k
] \fR|
.B \-g \fR|
.B \-n \fR|
.B \-d \fR|
.B \-t
] [
.B \-W
] [
.B \-n N
] [
-B \-c \fR|
.B \-w
] [
.B \-z
] [
.B \-v \fR|
.B \-q
] transducer_file [input_file [output_file]]
.PP
.B hfst-proc
[
[
.B \-\-analysis
[
.B \-\-apertium \fR|
.B \-\-cg \fR|
.B \-\-xerox
] [
.B \-\-keep-compounds
] \fR|
.B \-\-generation \fR|
.B \-\-non-marked-gen \fR|
.B \-\-debugged-gen \fR|
.B \-\-tokenize
] [
.B \-\-show-weights
] [
.B \-\-analyses=N
] [
-B \-\-case-sensitive \fR|
.B \-\-dictionary-case
] [
.B \-\-null-flush
] [
.B \-\-verbose \fR|
.B \-\-quiet
] [
.B \-\-version \fR|
.B \-\-help
] transducer_file [input_file [output_file]]
.SH DESCRIPTION
Perform morphological analysis and generation on a stream of running text using
a finite-state transducer in HFST's optimized-lookup format (conventional file
extension: .hfst.ol) as generated by \fBhfst-lookup-optimize(1)\fR. The default
output format and to a large extent the command-line options are equivalent to
those of \fBlt-proc(1)\fR, a component of Apertium's lttoolbox. The input text
must conform to the Apertium stream format
(<http://wiki.apertium.org/wiki/Apertium_stream_format>).
.TP
The output of this command with the \fB\-x\fR option should in most cases be
equivalent to the output of the \fBhfst-optimized-lookup(1)\fR command.
.SH OPTIONS
.TP
.B \-a, \-\-analysis
Tokenizes the text in surface forms (lexical units as they appear in
texts) and delivers, for each surface form, one or more lexical forms
consisting of lemma, lexical category and morphological inflection
information. Multi-word surface forms are analysed in a left-to-right,
longest-match fashion. Multi-word surface forms may be invariable
(such as a multi-word preposition or conjunction) or inflected (for
example, in es, \fI"echaban de menos"\fR, \(dqthey missed\(dq, is a
form of the imperfect indicative tense of the verb \fI"echar de
menos"\fR, \(dqto miss\(dq). Single-word surface
forms analysis produces output like the one in these examples:
\ \fI"cantar"\fR \-> `\fI^cantar/cantar<vblex><inf>$\fR' or
\ `\fI"daba"\fR \->
\ `\fI^daba/dar<vblex><pii><p1><sg>/dar<vblex><pii><p3><sg>$\fR'.
.TP
.B \-g, \-\-generation
Delivers a target-language surface form for each target-language
lexical form, by suitably inflecting it.
.TP
.B \-n, \-\-non-marked-gen
Morphological generation (like \fB-g\fR) but without unknown word
marks (asterisk `*').
.TP
.B \-d, \-\-debugged-gen
Morphological generation (like \fB-g\fR) but retaining part-of-speech
tags.
.TP
.B \-t, \-\-tokenize
Split the input stream into the symbols which would be fed into the transducer
during analysis or generation, as well as showing which characters are
unrecognized by the transducer. This is mainly used for debugging.
.TP
.B \-p, \-\-apertium
Print the results of analysis in conformance with the Apertium stream format
(default).
.B \-C, \-\-cg
Print the results of analysis in the format expected by \fBcg-proc(1)\fR. This
implies \fB\-w\fR
.B \-x, \-\-xerox
Print the results of analysis in Xerox format. This is the default output
format of \fBhfst-optimized-lookup(1)\fR.
.TP
.B \-k, \-\-keep-compounds
Keep all compound analyses instead of removing any with more components than the
minimum number of components of any available analyses.
.TP
.B \-W, \-\-show-weights
For weighted transducers, print the final analysis weights.
.TP
-B \-N N, \-\-analyses=N
Output no more than N analyses.
.TP
.B \-c, \-\-case-sensitive
Use the literal case of the incoming characters instead of allowing upper-case
characters to be treated as lower-case.
.TP
.B \-w, \-\-dictionary-case
Use the case information contained in the lexicon, instead of the surface
case (only applied in analysis mode).
.TP
.B \-z, \-\-null-flush
Flush output on the null character
.TP
.B \-v, \-\-version
Display the version number.
.TP
.B \-h, \-\-help
Display this help.
.SH FILES
.B transducer_file
The input transducer compiled into HFST's optimized lookup format.
.B input_file
The source of the input text. If not given, <stdin> is used.
.B output_file
Where to print the output. If not given, <stdout> is used.
.SH "SEE ALSO"
.I hfst-lookup-optimize\fR(1),
.I apertium\fR(1),
.I apertium-destxt\fR(1),
.I lt-proc\fR(1).
.SH "REPORTING BUGS"
Report bugs to HFST team <hfst\-bugs@helsinki.fi>
